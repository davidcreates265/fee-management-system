<%- include("header") -%>

<div class="edit-student-page">
  <h1>Edit Student Information</h1>
  <form class="editTable2" action="/edit-student/<%= student._id %>" method="POST">
    <!-- Include form fields with their respective values -->
    <div class="form-group editStudentFields">
      <label for="name">Name:</label>
      <input type="text" id="name" name="name" value="<%= student.name %>">
    </div>
    <div class="form-group editStudentFields">
      <label for="age">Age:</label>
      <input type="number" id="age" name="age" value="<%= student.age %>">
    </div>
    <div class="form-group editStudentFields">
      <label for="gender">Gender:</label>
      <input type="text" id="gender" name="gender" value="<%= student.gender %>">
    </div>
    <div class="form-group editStudentFields">
      <label for="level">Level:</label>
      <input type="text" id="level" name="level" value="<%= student.level %>">
    </div>
    <div class="form-group editStudentFields">
      <label for="studentClass">Class:</label>
      <input type="text" id="studentClass" name="studentClass" value="<%= student.class %>">
    </div>
    <div class="form-group editStudentFields">
      <label for="fees">Fees:</label>
      <input type="number" id="fees" name="fees" value="<%= student.fees %>">
    </div>
    <div class="form-group editStudentFields">
      <label for="status">Fees Status:</label>
    <select name="status" id="feesStatus" required>
      <option value="">Select Status</option>
      <option value="Not Paid">Not Paid</option>
      <option value="Paid Fully">Paid Fully</option>      
      <option value="Pending Balance">Pending Balance</option>
    </select>
    </div>

    <div class="form-group editStudentFields">
      <label for="paidAmount">Paid Amount:</label>
      <input type="number" id="paidAmount" name="paidAmount" value="<%= student.paid_amount %>">
    </div>
    <div class="form-group editStudentFields">
      <label for="paymentDate">Payment Date:</label>
      <input type="date" id="paymentDate" name="paymentDate" value="<%= student.date_paid ? student.date_paid.toISOString().split('T')[0] : '' %>">
    </div>

    <button class="w-30 btn btn-lg btn-primary submit-button2" type="submit">Save Changes</button>
  </form>
</div>

<style>
  input[name="paidAmount"] {
    display: none;
  }
</style>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe" crossorigin="anonymous"></script>

<script>
  $(document).ready(function() {
    // Function to handle the visibility of the "Paid Amount" input
    function handlePaidAmountInputVisibility() {
      var status = $('#feesStatus').val();
      var paidAmountLabel = $('label[for="paidAmount"]');
      var paidAmountInput = $('input[name="paidAmount"]');
      if (status === 'Pending Balance') {
        paidAmountLabel.show();
        paidAmountInput.prop('required', true);
        paidAmountInput.show();
      } else {
        paidAmountLabel.hide();
        paidAmountInput.prop('required', false);
        paidAmountInput.hide();
      }
    }

    // When the "Level" field value changes
    $('select[name="level"]').on('change', function() {
      var level = $(this).val();
      var classSelect = $('select[name="class"]');
      var feesSelect = $('select[name="fees"]');
      
      // Clear previous options
      classSelect.empty();
      feesSelect.empty();
      
      // Populate options based on the selected level
      if (level === 'primary') {
        // Primary School options
        for (var i = 1; i <= 6; i++) {
          classSelect.append('<option value="Grade ' + i + '">Grade ' + i + '</option>');
        }
        feesSelect.append('<option value="300000">300,000</option>');
      } else if (level === 'secondary') {
        // Secondary School options
        for (var j = 1; j <= 6; j++) {
          classSelect.append('<option value="Form ' + j + '">Form ' + j + '</option>');
        }
        feesSelect.append('<option value="600000">600,000</option>');
      }

      // Call the function to handle the "Paid Amount" input visibility
      handlePaidAmountInputVisibility();
    });

    // When the "Fees Status" field value changes
    $('#feesStatus').on('change', function() {
      // Call the function to handle the "Paid Amount" input visibility
      handlePaidAmountInputVisibility();
    });

    // On form submission
    $('form').on('submit', function(event) {
      var status = $('#feesStatus').val();
      var paidAmount = parseFloat($('input[name="paidAmount"]').val()) || 0;

      var feesSelect = $('select[name="fees"]');
      var selectedFees = parseFloat(feesSelect.val()) || 0;

      if (status === 'Pending Balance') {
        // Validate the paid amount not being lower than 1 or greater than the fees
        

        // Calculate the remaining balance
        var remainingBalance = fees - paidAmount;

        // Update the feesSelect element with the new remaining balance
        feesSelect.empty();
        feesSelect.append('<option value="' + remainingBalance + '">' + remainingBalance + '</option>');
      }
    });
  });


  const visibleInput = document.getElementById("visiblePaidAmount");
  const invisibleInput = document.getElementById("invisiblePaidAmount");

  // Function to synchronize the values
  function syncInputs() {
    invisibleInput.value = visibleInput.value;
  }

  // Add event listener to visible input for real-time synchronization
  visibleInput.addEventListener("input", syncInputs);



    // Get references to the relevant elements
    const feesStatusSelect = document.getElementById('feesStatus');
  const paidAmountField = document.getElementById('visiblePaidAmount');
  const paymentDateField = document.getElementById('visiblePaymentDate');

  // Function to show/hide the paidAmount and paymentDate fields
  function updateFieldsVisibility() {
    const selectedStatus = feesStatusSelect.value;
    if (selectedStatus === 'Not Paid') {
      paidAmountField.style.display = 'none';
      paymentDateField.style.display = 'none';
    } else if (selectedStatus === 'Paid Fully') {
      paidAmountField.style.display = 'block';
      paymentDateField.style.display = 'block';
    } else if (selectedStatus === 'Pending Balance') {
      paidAmountField.style.display = 'block';
      paymentDateField.style.display = 'block';
    }
  }

  // Attach event listener to the feesStatusSelect to update fields visibility
  feesStatusSelect.addEventListener('change', updateFieldsVisibility);

  // Initially call the function to set the visibility based on the initial value
  updateFieldsVisibility();

</script>


<%- include("footer") -%>
